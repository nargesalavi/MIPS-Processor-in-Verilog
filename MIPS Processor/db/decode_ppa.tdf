--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone II" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_compare 2013:06:12:18:03:43:SJ cbx_lpm_decode 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_ppa
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode1623w[1..0]	: WIRE;
	w_anode1632w[3..0]	: WIRE;
	w_anode1649w[3..0]	: WIRE;
	w_anode1659w[3..0]	: WIRE;
	w_anode1669w[3..0]	: WIRE;
	w_anode1679w[3..0]	: WIRE;
	w_anode1689w[3..0]	: WIRE;
	w_anode1699w[3..0]	: WIRE;
	w_anode1709w[3..0]	: WIRE;
	w_anode1721w[1..0]	: WIRE;
	w_anode1728w[3..0]	: WIRE;
	w_anode1739w[3..0]	: WIRE;
	w_anode1749w[3..0]	: WIRE;
	w_anode1759w[3..0]	: WIRE;
	w_anode1769w[3..0]	: WIRE;
	w_anode1779w[3..0]	: WIRE;
	w_anode1789w[3..0]	: WIRE;
	w_anode1799w[3..0]	: WIRE;
	w_data1621w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode1799w[3..3], w_anode1789w[3..3], w_anode1779w[3..3], w_anode1769w[3..3], w_anode1759w[3..3], w_anode1749w[3..3], w_anode1739w[3..3], w_anode1728w[3..3]), ( w_anode1709w[3..3], w_anode1699w[3..3], w_anode1689w[3..3], w_anode1679w[3..3], w_anode1669w[3..3], w_anode1659w[3..3], w_anode1649w[3..3], w_anode1632w[3..3]));
	w_anode1623w[] = ( (w_anode1623w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode1632w[] = ( (w_anode1632w[2..2] & (! w_data1621w[2..2])), (w_anode1632w[1..1] & (! w_data1621w[1..1])), (w_anode1632w[0..0] & (! w_data1621w[0..0])), w_anode1623w[1..1]);
	w_anode1649w[] = ( (w_anode1649w[2..2] & (! w_data1621w[2..2])), (w_anode1649w[1..1] & (! w_data1621w[1..1])), (w_anode1649w[0..0] & w_data1621w[0..0]), w_anode1623w[1..1]);
	w_anode1659w[] = ( (w_anode1659w[2..2] & (! w_data1621w[2..2])), (w_anode1659w[1..1] & w_data1621w[1..1]), (w_anode1659w[0..0] & (! w_data1621w[0..0])), w_anode1623w[1..1]);
	w_anode1669w[] = ( (w_anode1669w[2..2] & (! w_data1621w[2..2])), (w_anode1669w[1..1] & w_data1621w[1..1]), (w_anode1669w[0..0] & w_data1621w[0..0]), w_anode1623w[1..1]);
	w_anode1679w[] = ( (w_anode1679w[2..2] & w_data1621w[2..2]), (w_anode1679w[1..1] & (! w_data1621w[1..1])), (w_anode1679w[0..0] & (! w_data1621w[0..0])), w_anode1623w[1..1]);
	w_anode1689w[] = ( (w_anode1689w[2..2] & w_data1621w[2..2]), (w_anode1689w[1..1] & (! w_data1621w[1..1])), (w_anode1689w[0..0] & w_data1621w[0..0]), w_anode1623w[1..1]);
	w_anode1699w[] = ( (w_anode1699w[2..2] & w_data1621w[2..2]), (w_anode1699w[1..1] & w_data1621w[1..1]), (w_anode1699w[0..0] & (! w_data1621w[0..0])), w_anode1623w[1..1]);
	w_anode1709w[] = ( (w_anode1709w[2..2] & w_data1621w[2..2]), (w_anode1709w[1..1] & w_data1621w[1..1]), (w_anode1709w[0..0] & w_data1621w[0..0]), w_anode1623w[1..1]);
	w_anode1721w[] = ( (w_anode1721w[0..0] & data_wire[3..3]), enable_wire);
	w_anode1728w[] = ( (w_anode1728w[2..2] & (! w_data1621w[2..2])), (w_anode1728w[1..1] & (! w_data1621w[1..1])), (w_anode1728w[0..0] & (! w_data1621w[0..0])), w_anode1721w[1..1]);
	w_anode1739w[] = ( (w_anode1739w[2..2] & (! w_data1621w[2..2])), (w_anode1739w[1..1] & (! w_data1621w[1..1])), (w_anode1739w[0..0] & w_data1621w[0..0]), w_anode1721w[1..1]);
	w_anode1749w[] = ( (w_anode1749w[2..2] & (! w_data1621w[2..2])), (w_anode1749w[1..1] & w_data1621w[1..1]), (w_anode1749w[0..0] & (! w_data1621w[0..0])), w_anode1721w[1..1]);
	w_anode1759w[] = ( (w_anode1759w[2..2] & (! w_data1621w[2..2])), (w_anode1759w[1..1] & w_data1621w[1..1]), (w_anode1759w[0..0] & w_data1621w[0..0]), w_anode1721w[1..1]);
	w_anode1769w[] = ( (w_anode1769w[2..2] & w_data1621w[2..2]), (w_anode1769w[1..1] & (! w_data1621w[1..1])), (w_anode1769w[0..0] & (! w_data1621w[0..0])), w_anode1721w[1..1]);
	w_anode1779w[] = ( (w_anode1779w[2..2] & w_data1621w[2..2]), (w_anode1779w[1..1] & (! w_data1621w[1..1])), (w_anode1779w[0..0] & w_data1621w[0..0]), w_anode1721w[1..1]);
	w_anode1789w[] = ( (w_anode1789w[2..2] & w_data1621w[2..2]), (w_anode1789w[1..1] & w_data1621w[1..1]), (w_anode1789w[0..0] & (! w_data1621w[0..0])), w_anode1721w[1..1]);
	w_anode1799w[] = ( (w_anode1799w[2..2] & w_data1621w[2..2]), (w_anode1799w[1..1] & w_data1621w[1..1]), (w_anode1799w[0..0] & w_data1621w[0..0]), w_anode1721w[1..1]);
	w_data1621w[2..0] = data_wire[2..0];
END;
--VALID FILE
